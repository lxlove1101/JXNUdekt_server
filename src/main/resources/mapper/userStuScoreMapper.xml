<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- USER_STU_SCORE -->
<mapper namespace="com.jxnudekt.server.dao.UserStuScoreDao">
    <!-- 结果映射 -->
    <resultMap id="userStuScoreMap" type="UserStuScoreEntity">
        <id column="ID" property="id" jdbcType="BIGINT" />
        <result column="userId" property="userId" jdbcType="BIGINT" />
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="headImg" property="headImg" jdbcType="VARCHAR"/>
        <result column="score" property="score" jdbcType="INTEGER" />
        <result column="atyCount" property="atyCount" jdbcType="INTEGER" />
        <result column="semester" property="semester" jdbcType="INTEGER" />
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modifyTime" property="modifyTime" jdbcType="TIMESTAMP" />
    </resultMap>
    
    <!-- 表所有字段 -->
    <sql id="allColumns">
        ID, userId, score, atyCount, semester, createTime,
        modifyTime
    </sql>

    <select id="rankUserStuByatyCount" resultMap="userStuScoreMap" parameterType="int">
        SELECT b.*, a.username, a.headImg
        FROM user_stu AS a
        LEFT JOIN user_stu_score AS b ON a.id = b.userId
        WHERE a.classId = #{classId}
        AND b.semester = #{semester}
        ORDER BY b.atyCount DESC
    </select>

    <select id="rankUserStuByScore" resultMap="userStuScoreMap" parameterType="int">
        SELECT b.*, a.username, a.headImg
        FROM user_stu AS a
        LEFT JOIN user_stu_score AS b ON a.id = b.userId
        WHERE a.classId = #{classId}
        AND b.semester = #{semester}
        ORDER BY b.score DESC
    </select>
    
    <!-- 查询所有数据 -->
    <select id="findUserStuScoreAll" resultMap="userStuScoreMap">
        SELECT
        <include refid="allColumns" />
        FROM USER_STU_SCORE
    </select>
    
    <!-- 根据条件查询数据 -->
    <select id="findUserStuScoreByCondition" resultMap="userStuScoreMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM USER_STU_SCORE WHERE 1 = 1
        <if test="userId != null">
            AND userId = #{userId}
        </if>
        <if test="score != null">
            AND SCORE = #{score}
        </if>
        <if test="atyCount != null">
            AND atyCount = #{atyCount}
        </if>
        <if test="semester != null">
            AND SEMESTER = #{semester}
        </if>
        <if test="createTime != null">
            AND createTime = #{createTime}
        </if>
        <if test="modifyTime != null">
            AND modifyTime = #{modifyTime}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findUserStuScoreByIds" resultMap="userStuScoreMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM USER_STU_SCORE WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertUserStuScore" parameterType="map">
        INSERT INTO USER_STU_SCORE (<include refid="allColumns" />)
        VALUES (
            #{id},
            #{userId},
            #{score},
            #{atyCount},
            #{semester},
            #{createTime},
            #{modifyTime}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertUserStuScores" parameterType="list">
        INSERT INTO USER_STU_SCORE (<include refid="allColumns" />)
        VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.userId},
                #{item.score},
                #{item.atyCount},
                #{item.semester},
                #{item.createTime},
                #{item.modifyTime}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateUserStuScore" parameterType="map">
        UPDATE USER_STU_SCORE
        <set>
            <if test="userId != null">userId = #{userId},</if>
            <if test="score != null">SCORE = #{score},</if>
            <if test="atyCount != null">atyCount = #{atyCount},</if>
            <if test="semester != null">SEMESTER = #{semester},</if>
            <if test="createTime != null">createTime = #{createTime},</if>
            <if test="modifyTime != null">modifyTime = #{modifyTime}</if>
        </set>
        WHERE ID = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updateUserStuScores" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE USER_STU_SCORE
            <set>
                <if test="userId != null">userId = #{item.userId},</if>
                <if test="score != null">SCORE = #{item.score},</if>
                <if test="atyCount != null">atyCount = #{item.atyCount},</if>
                <if test="semester != null">SEMESTER = #{item.semester},</if>
                <if test="createTime != null">createTime = #{item.createTime},</if>
                <if test="modifyTime != null">modifyTime = #{item.modifyTime}</if>
            </set>
            WHERE ID = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteUserStuScoreById" parameterType="string">
        DELETE FROM USER_STU_SCORE WHERE ID = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteUserStuScoreByIds" parameterType="list">
        DELETE FROM USER_STU_SCORE WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>